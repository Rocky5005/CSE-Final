from sklearn.naive_bayes import BernoulliNB
import pandas as pd
import numpy as np
from sklearn.metrics import f1_score
from sklearn.model_selection import train_test_split
from sklearn.model_selection import GridSearchCV
from sklearn.model_selection import RepeatedStratifiedKFold


def naive_bayes(filename: str):
    print("Naive Bayes:")
    df = pd.read_csv(filename)
    features = df.loc[:, df.columns != "TenYearCHD"]
    labels = df["TenYearCHD"]
    (
        features_train,
        features_test,
        labels_train,
        labels_test,
    ) = train_test_split(
        features, labels, test_size=0.2, stratify=labels, random_state=42
    )  # stratified data
    model = BernoulliNB()
    model.fit(features_train, labels_train)
    labels_pred = model.predict(features_test)
    model.fit(features_train, labels_train)
    labels_train_pred = model.predict(features_train)
    return (labels_train, labels_train_pred, labels_test, labels_pred)

